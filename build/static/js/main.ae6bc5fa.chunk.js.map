{"version":3,"sources":["components/Auth/Auth.module.css","components/Layout/Nav.module.css","pages/Invoices/InvoicesPage.module.css","pages/invoice/Invoice.module.css","store/invoice-slice.js","store/index-redux.js","firebase.js","store/auth-context.js","components/Layout/Nav.js","components/Invoices/EmptyInvoices.js","pages/HomePage/HomePage.js","components/Layout/Filters.js","components/Layout/Layout.js","components/Invoices/InvoiceItem.js","utils/utils.js","components/Invoices/InvoiceList.js","hooks/use-input.js","components/Form/Item.js","components/Form/NewForm.js","pages/Invoices/InvoicesPage.js","components/InvoiceDetail/InvoiceDetail.js","components/Form/EditItem.js","components/Form/EditForm.js","pages/invoice/InvoicePage.js","components/Auth/SignUp.js","components/Auth/Login.js","components/Auth/ForgotPassword.js","components/Auth/PrivateRoutes.js","store/invoice-actions.js","App.js","index.js"],"names":["module","exports","invoiceSlice","createSlice","name","initialState","invoices","totalInvoices","changed","reducers","replaceInvoices","state","action","payload","addInvoice","newInvoice","find","invoice","id","push","deleteInvoice","filter","markInvoiceAsPaid","existingInvoice","findIndex","status","updateInvoice","updatedInvoice","store","configureStore","reducer","allInvoice","invoiceActions","actions","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","AuthContext","React","createContext","currentUser","storageId","signUp","email","password","login","logout","resetPassword","useAuth","useContext","AuthContextprovider","props","useState","setCurrentUser","setStorageId","loading","setLoading","useEffect","onAuthStateChanged","user","uid","value","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","Provider","children","Nav","className","classes","nav","navLogo","src","alt","imgDiv","avatar","EmptyInvoices","header","text","style","display","onClick","handleClick","task","HomePage","navigate","useNavigate","Filters","filterIsOpen","setFilterIsOpen","prev","e","target","dataset","onFilterValue","Layout","authCtx","error","setError","noOfInvoices","useSelector","onLogoutHandler","a","replace","Alert","variant","getFilterValue","openForm","InvoiceItem","color","openDetail","toName","dueDate","totalAmount","getDueDate","date","terms","formatter","Intl","DateTimeFormat","navigator","language","month","year","day","dateObj","Date","format","formatDate","getTime","InvoiceList","length","map","amount","itemList","item","price","qty","reduce","b","invoiceDate","to","useInput","validate","enteredInput","setEnteredInput","isTouched","setIsTouched","inputIsValid","isValid","isInvalid","onChangeHandler","onBlurHandler","reset","Item","btnClicked","setBtnClicked","errorText","trim","itemNameInput","entereditemNameIsValid","itemNameInputIsInvalid","itemNameChangeHandler","itemNameBlurHandler","resetitemNameInput","qtyInput","enteredqtyIsValid","qtyInputIsInvalid","qtyChangeHandler","qtyBlurHandler","resetqtyInput","priceInput","enteredpriceIsValid","priceInputIsInvalid","priceChangeHandler","priceBlurHandler","resetpriceInput","total","onSubmitHandler","preventDefault","invoiceItem","itemName","onItemValue","onSubmit","htmlFor","type","onChange","onBlur","min","max","onDelete","disabled","NewForm","dispatch","useDispatch","randomId","Math","floor","random","component","setComponent","invoiceItemList","setInvoiceItemList","termValue","setTermValue","onDeleteHandler","i","getItemValue","addressInput","enteredAddressIsValid","addressInputIsInvalid","addressChangeHandler","addressBlurHandler","resetAddressInput","cityInput","enteredCityIsValid","cityInputIsInvalid","cityChangeHandler","cityBlurHandler","resetCityInput","postCodeInput","enteredpostCodeIsValid","postCodeInputIsInvalid","postCodeChangeHandler","postCodeBlurHandler","resetpostCodeInput","countryInput","enteredcountryIsValid","countryInputIsInvalid","countryChangeHandler","countryBlurHandler","resetcountryInput","clientNameInput","enteredclientNameIsValid","clientNameInputIsInvalid","clientNameChangeHandler","clientNameBlurHandler","resetclientNameInput","includes","clientEmailInput","enteredclientEmailIsValid","clientEmailInputIsInvalid","clientEmailChangeHandler","clientEmailBlurHandler","resetclientEmailInput","clientAddressInput","enteredclientAddressIsValid","clientAddressInputIsInvalid","clientAddressChangeHandler","clientAddressBlurHandler","resetclientAddressInput","clientCityInput","enteredclientCityIsValid","clientCityInputIsInvalid","clientCityChangeHandler","clientCityBlurHandler","resetclientCityInput","clientPostCodeInput","enteredclientPostCodeIsValid","clientPostCodeInputIsInvalid","clientPostCodeChangeHandler","clientPostCodeBlurHandler","resetclientPostCodeInput","clientCountryInput","enteredclientCountryIsValid","clientCountryInputIsInvalid","clientCountryChangeHandler","clientCountryBlurHandler","resetclientCountryInput","invoiceDateInput","enteredinvoiceDateIsValid","invoiceDateInputIsInvalid","invoiceDateChangeHandler","invoiceDateBlurHandler","resetinvoiceDateInput","descriptionInput","entereddescriptionIsValid","descriptionInputIsInvalid","descriptionChangeHandler","descriptionBlurHandler","resetdescriptionInput","resetForm","closeForm","backdropClasses","show","modalClasses","join","from","address","city","postCode","country","mail","desc","toString","InvoicesPage","filterValue","setFilterValue","modalOpen","setModalOpen","filteredInvoices","toLowerCase","home","navBar","InvoiceDetail","onMarkAsPaidHandler","isPaid","onGoBack","EditItem","nameInputRef","useRef","qtyInputRef","priceInputRef","defaultValue","ref","current","EditForm","getEditItemValue","d","dd","mm","yyyy","formatEditDate","setAddressInput","setCityInput","postcodeInput","setPostcodeInput","setCountryInput","setClientNameInput","clientMailInput","setClientMailInput","setClientAddressInput","setClientCityInput","setClientPostCodeInput","setClientCountryInput","setInvoiceDateInput","setDescriptionInput","InvoicePage","invoiceId","useParams","invoiceData","SignUp","emailRef","passwordRef","passwordConfirmRef","onHandleSubmit","formModal","form","formInput","required","btnAction","link","Login","handleSubmit","ForgotPassword","message","setMessage","PrivateRoutes","isInitial","App","page","fetchData","fetch","res","ok","Error","json","key","data","console","log","result","sendRequest","method","body","JSON","stringify","sendInvoiceData","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae6bc5fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formModal\":\"Auth_formModal__9Qp-u\",\"form\":\"Auth_form__YyYoq\",\"formInput\":\"Auth_formInput__1_4_w\",\"actions\":\"Auth_actions__3Z3rD\",\"btnAction\":\"Auth_btnAction__3kIbS\",\"link\":\"Auth_link__1xODJ\",\"error\":\"Auth_error__v8JgQ\",\"message\":\"Auth_message__g49XV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__WI6aX\",\"navLogo\":\"Nav_navLogo__wosKO\",\"imgDiv\":\"Nav_imgDiv__3eSF8\",\"avatar\":\"Nav_avatar__1VOSE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"InvoicesPage_home__2Eh64\",\"navBar\":\"InvoicesPage_navBar__32wDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"invoice\":\"Invoice_invoice__2yATv\",\"navBar\":\"Invoice_navBar__1BTN9\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst invoiceSlice = createSlice({\n  name: \"invoices\",\n  initialState: {\n    invoices: [],\n    totalInvoices: 0,\n    changed: false,\n  },\n  reducers: {\n    replaceInvoices(state, action) {\n      state.invoices = action.payload.invoices;\n      state.totalInvoices = action.payload.totalInvoices;\n    },\n\n    addInvoice(state, action) {\n      const newInvoice = action.payload;\n\n      const existingInvoice = state.invoices.find(\n        (invoice) => invoice.id === newInvoice.id\n      );\n\n      if (!existingInvoice) {\n        state.invoices.push(newInvoice);\n        state.totalInvoices++;\n      }\n\n      state.changed = true;\n    },\n\n    deleteInvoice(state, action) {\n      const id = action.payload;\n\n      const existingInvoice = state.invoices.find(\n        (invoice) => invoice.id === id\n      );\n\n      if (existingInvoice) {\n        state.invoices = state.invoices.filter((invoice) => invoice.id !== id);\n        state.totalInvoices--;\n      }\n\n      state.changed = true;\n    },\n\n    markInvoiceAsPaid(state, action) {\n      const id = action.payload;\n\n      const existingInvoice = state.invoices.findIndex(\n        (invoice) => invoice.id === id\n      );\n\n      if (state.invoices[existingInvoice]) {\n        state.invoices[existingInvoice].status = \"Paid\";\n      }\n\n      state.changed = true;\n    },\n\n    updateInvoice(state, action) {\n      const updatedInvoice = action.payload;\n\n      const existingInvoice = state.invoices.findIndex(\n        (invoice) => invoice.id === updatedInvoice.id\n      );\n\n      if (state.invoices[existingInvoice]) {\n        state.invoices[existingInvoice] = updatedInvoice;\n      }\n\n      state.changed = true;\n    },\n  },\n});\n\nexport default invoiceSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport invoiceSlice from \"./invoice-slice\";\n\nconst store = configureStore({\n  reducer: { allInvoice: invoiceSlice.reducer },\n});\n\nexport const invoiceActions = invoiceSlice.actions;\n\nexport default store;\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyAKHwZyGK48sFHO4ibyxRn24Om6uGr1FLU\",\n  authDomain: \"invoice-dev-2ff87.firebaseapp.com\",\n  projectId: \"invoice-dev-2ff87\",\n  storageBucket: \"invoice-dev-2ff87.appspot.com\",\n  messagingSenderId: \"572391947797\",\n  appId: \"1:572391947797:web:ceb2b4159adf90c9d6d81c\",\n});\n\nexport const auth = getAuth(app);\n\nexport default app;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  sendPasswordResetEmail,\n} from \"@firebase/auth\";\n\nconst AuthContext = React.createContext({\n  currentUser: \"\",\n  storageId: \"\",\n  signUp: (email, password) => {},\n  login: (email, password) => {},\n  logout: () => {},\n  resetPassword: (email) => {},\n});\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthContextprovider = (props) => {\n  const [currentUser, setCurrentUser] = useState();\n\n  const [storageId, setStorageId] = useState();\n\n  const [loading, setLoading] = useState(true);\n\n  function signUp(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      if (user) {\n        setStorageId(user.uid);\n      }\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    storageId,\n    signUp,\n    login,\n    logout,\n    resetPassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && props.children}\n    </AuthContext.Provider>\n  );\n};\n","import classes from \"./Nav.module.css\";\n\nfunction Nav() {\n  return (\n    <nav className={classes.nav}>\n      <img className={classes.navLogo} src={\"/static/images/logo.svg\"} alt=\"\" />\n\n      <div className={classes.imgDiv}>\n        <img src={\"/static/images/icon-sun.svg\"} alt=\"\" />\n        <div className={classes.avatar}>\n          <img src={\"/static/images/image-avatar.jpg\"} alt=\"\" />\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import \"./EmptyInvoices.css\";\n\nfunction EmptyInvoices(props) {\n  return (\n    <div className=\"emptyList\">\n      <img src={\"/static/images/illustration-empty.svg\"} alt=\"\" />\n\n      <span className=\"emptytitle\">\n        <h1>{props.header}</h1>\n        <p>{props.text}</p>\n      </span>\n\n      <button style={{ display: props.display }} onClick={props.handleClick}>\n        {props.task}\n      </button>\n    </div>\n  );\n}\n\nexport default EmptyInvoices;\n","import Nav from \"../../components/Layout/Nav\";\nimport EmptyInvoices from \"../../components/Invoices/EmptyInvoices\";\nimport { useNavigate } from \"react-router\";\n\nfunction HomePage() {\n  const navigate = useNavigate();\n\n  const onClickHandler = () => {\n    navigate(\"/login\", { push: true });\n  };\n\n  return (\n    <div>\n      <div>\n        <Nav />\n      </div>\n\n      <EmptyInvoices\n        header={\"Welcome\"}\n        text={\"Login or create an accout to add invoices\"}\n        display={\"inline-flex\"}\n        task={\"Login or Sign up\"}\n        handleClick={onClickHandler}\n      />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import { useState } from \"react\";\nimport \"./Filters.css\";\n\nfunction Filters(props) {\n  const [filterIsOpen, setFilterIsOpen] = useState(false);\n\n  const toggleFilter = () => {\n    setFilterIsOpen((prev) => !prev);\n  };\n\n  const onFiltersClickhandler = (e) => {\n    if (e.target.dataset.value) {\n      props.onFilterValue(e.target.dataset.value);\n    }\n  };\n\n  return (\n    <div className=\"filters\">\n      <div onClick={toggleFilter} className=\"filterTop\">\n        <span>Filter</span>\n        <img\n          className={filterIsOpen ? \"rotate\" : \"\"}\n          src={\"/static/images/icon-arrow-down.svg\"}\n          alt=\"\"\n        />\n      </div>\n\n      {filterIsOpen && (\n        <div onClick={onFiltersClickhandler} className=\"filterList\">\n          <p data-value=\"all\">All</p>\n          <p data-value=\"paid\">Paid</p>\n          <p data-value=\"pending\">Pending</p>\n          <p data-value=\"draft\">Draft</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Filters;\n","import Filters from \"./Filters\";\nimport \"./Layout.css\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"../../store/auth-context\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Alert } from \"react-bootstrap\";\n\nfunction Layout(props) {\n  const authCtx = useAuth();\n\n  const [error, setError] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const noOfInvoices = useSelector((state) => state.allInvoice.totalInvoices);\n\n  const getFilterValue = (value) => {\n    props.getFilterValue(value);\n  };\n\n  const onLogoutHandler = async () => {\n    try {\n      await authCtx.logout();\n\n      navigate(\"/login\", { replace: true });\n    } catch (err) {\n      setError(\"Failed to log out\");\n    }\n  };\n\n  return (\n    <div className=\"container layout \">\n      <header className=\"header\">\n        <div className=\"invo\">\n          <span>Invoices</span>\n          <span className=\"amount\">{noOfInvoices} invoices</span>\n        </div>\n\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n\n        <div className=\"options\">\n          <Filters onFilterValue={getFilterValue} />\n\n          <button onClick={props.openForm}>\n            <span>\n              <img src={\"/static/images/icon-plus.svg\"} alt=\"\" />\n            </span>\n            New\n          </button>\n\n          <button onClick={onLogoutHandler}>Logout</button>\n        </div>\n      </header>\n\n      <main>{props.children}</main>\n    </div>\n  );\n}\n\nexport default Layout;\n","import \"./InvoiceItem.css\";\nimport { useNavigate } from \"react-router\";\n\nfunction InvoiceItem(props) {\n  let color;\n\n  if (props.status === \"Paid\") {\n    color = \"green\";\n  } else if (props.status === \"Pending\") {\n    color = \"orange\";\n  } else {\n    color = \"grey\";\n  }\n\n  const navigate = useNavigate();\n\n  const openDetail = () => {\n    navigate(`/invoices/${props.id}`);\n  };\n\n  return (\n    <div onClick={openDetail} className=\"invoice\">\n      <p className=\"invoiceId\">\n        <span>#</span>\n        {props.id}\n      </p>\n\n      <p className=\"name\">{props.toName}</p>\n\n      <div className=\"invoiceInfo\">\n        <p className=\"date\">\n          <span>Due</span> {props.dueDate}\n        </p>\n        <p className=\"amount\">{props.totalAmount}</p>\n      </div>\n\n      <div className=\"invoiceStatus\">\n        <div className={`status ${color}`}>\n          <span className=\"dot\"></span>\n          <span className=\"statusName\">{props.status}</span>\n        </div>\n\n        <img\n          onClick={openDetail}\n          src={\"/static/images/icon-arrow-right.svg\"}\n          alt=\"\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default InvoiceItem;\n","export function formatDate(date) {\n  const formatter = new Intl.DateTimeFormat(navigator.language || \"eu\", {\n    month: \"short\",\n    year: \"numeric\",\n    day: \"2-digit\",\n  });\n\n  const dateObj = new Date(date);\n  return formatter.format(dateObj);\n}\n\nexport function formatEditDate(date) {\n  const d = new Date(date);\n  const dd = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(d);\n  const mm = new Intl.DateTimeFormat(\"en\", { month: \"2-digit\" }).format(d);\n  const yyyy = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(d);\n  const newDate = `${yyyy}-${mm}-${dd}`;\n\n  return newDate;\n}\n\nexport function getDueDate(date, terms) {\n  const futureTime = terms * 24 * 60 * 60 * 1000;\n\n  const dateTime = new Date(date).getTime();\n\n  const newDate = futureTime + dateTime;\n\n  const dueDate = formatDate(newDate);\n\n  return dueDate;\n}\n\nexport const calcExpiringTime = (time) => {\n  const currentTime = new Date().getTime();\n\n  const expiringTime = new Date(time).getTime();\n\n  const remainingTime = expiringTime - currentTime;\n\n  return remainingTime;\n};\n\nexport const retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n\n  const storedExpiringTime = localStorage.getItem(\"expiringTime\");\n\n  const storedLocalId = localStorage.getItem(\"localID\");\n\n  const remainingTime = calcExpiringTime(storedExpiringTime);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"token\");\n\n    localStorage.removeItem(\"localID\");\n\n    localStorage.removeItem(\"expiringTime\");\n\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    localId: storedLocalId,\n    duration: remainingTime,\n  };\n};\n","import \"./InvoiceList.css\";\nimport InvoiceItem from \"./InvoiceItem\";\nimport { getDueDate } from \"../../utils/utils\";\nimport EmptyInvoices from \"./EmptyInvoices\";\n\nfunction InvoiceList(props) {\n  if (props.invoices.length <= 0) {\n    return (\n      <EmptyInvoices\n        display={\"none\"}\n        header={\"There is nothing here\"}\n        text={\"Create on invoice by clicking the New button and get started\"}\n      />\n    );\n  }\n\n  return (\n    <div className=\" list\">\n      {props.invoices.map((invoice) => {\n        const amount = invoice.itemList.map((item) => item.price * item.qty);\n\n        if (amount.length <= 0) {\n          return;\n        }\n\n        const totalAmount = amount.reduce((a, b) => a + b);\n\n        const dueDate = getDueDate(invoice.invoiceDate, invoice.terms);\n\n        return (\n          <InvoiceItem\n            key={invoice.id}\n            id={invoice.id}\n            toName={invoice.to.name}\n            dueDate={dueDate}\n            totalAmount={`£${totalAmount}`}\n            status={invoice.status}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default InvoiceList;\n","import { useState } from \"react\";\n\nfunction useInput(validate) {\n  const [enteredInput, setEnteredInput] = useState(\"\");\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const inputIsValid = validate(enteredInput);\n\n  const InputIsInvalid = !inputIsValid && isTouched;\n\n  const onChangeHandler = (e) => {\n    setEnteredInput(e.target.value);\n  };\n\n  const onBlurHandler = (e) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredInput(\"\");\n\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredInput,\n    isValid: inputIsValid,\n    isInvalid: InputIsInvalid,\n    onChangeHandler: onChangeHandler,\n    onBlurHandler: onBlurHandler,\n    reset: reset,\n  };\n}\n\nexport default useInput;\n","import \"./Item.css\";\nimport useInput from \"../../hooks/use-input\";\nimport { useState } from \"react\";\n\nfunction Item(props) {\n  const [btnClicked, setBtnClicked] = useState(false);\n\n  const errorText = <p className=\"errorText\">Input must not be empty</p>;\n\n  const onClickHandler = (e) => {\n    e.preventDefault();\n\n    props.onDelete(props.id);\n  };\n\n  const {\n    value: itemNameInput,\n    isValid: entereditemNameIsValid,\n    isInvalid: itemNameInputIsInvalid,\n    onChangeHandler: itemNameChangeHandler,\n    onBlurHandler: itemNameBlurHandler,\n    reset: resetitemNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: qtyInput,\n    isValid: enteredqtyIsValid,\n    isInvalid: qtyInputIsInvalid,\n    onChangeHandler: qtyChangeHandler,\n    onBlurHandler: qtyBlurHandler,\n    reset: resetqtyInput,\n  } = useInput((value) => value > 0);\n\n  const {\n    value: priceInput,\n    isValid: enteredpriceIsValid,\n    isInvalid: priceInputIsInvalid,\n    onChangeHandler: priceChangeHandler,\n    onBlurHandler: priceBlurHandler,\n    reset: resetpriceInput,\n  } = useInput((value) => value > 0);\n\n  const total = qtyInput * priceInput;\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    if (!entereditemNameIsValid && !enteredqtyIsValid && !enteredpriceIsValid) {\n      return;\n    }\n\n    setBtnClicked(true);\n\n    const invoiceItem = {\n      itemName: itemNameInput,\n      qty: qtyInput,\n      price: priceInput,\n      total: total,\n      id: props.id,\n    };\n\n    props.onItemValue(invoiceItem, e);\n\n    resetitemNameInput();\n    resetqtyInput();\n    resetpriceInput();\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler} className=\"item\">\n      <div className=\"formInput\">\n        <label htmlFor=\"itemName\">Item Name</label>\n        <input\n          value={itemNameInput}\n          type=\"text\"\n          id=\"itemName\"\n          onChange={itemNameChangeHandler}\n          onBlur={itemNameBlurHandler}\n        />\n        {itemNameInputIsInvalid && errorText}\n      </div>\n\n      <div className=\"itemGrid\">\n        <div className=\"formInput\">\n          <label htmlFor=\"qty\">Qty.</label>\n          <input\n            value={qtyInput}\n            type=\"number\"\n            id=\"qty\"\n            min=\"1\"\n            max=\"10\"\n            onChange={qtyChangeHandler}\n            onBlur={qtyBlurHandler}\n          />\n          {qtyInputIsInvalid && errorText}\n        </div>\n\n        <div className=\"formInput\">\n          <label htmlFor=\"price\">Price</label>\n          <input\n            value={priceInput}\n            type=\"number\"\n            min=\"1\"\n            max=\"10\"\n            id=\"price\"\n            onChange={priceChangeHandler}\n            onBlur={priceBlurHandler}\n          />\n          {priceInputIsInvalid && errorText}\n        </div>\n\n        <div className=\"total\">\n          <span>Total</span>\n          <p>{total}</p>\n        </div>\n\n        <button className=\"removeItem\">\n          <img\n            onClick={onClickHandler}\n            src={\"/static/images/icon-delete.svg\"}\n            alt=\"\"\n          />\n        </button>\n\n        <button\n          className=\"btnAddToList\"\n          onClick={onSubmitHandler}\n          disabled={btnClicked}\n        >\n          {!btnClicked && <img src=\"/static/images/icon-plus.svg\" alt=\"\" />}\n          {btnClicked && <img src=\"/static/images/icon-check.svg\" alt=\"\" />}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Item;\n","import { Fragment, useState } from \"react\";\nimport \"./NewForm.css\";\nimport Item from \"./Item\";\nimport useInput from \"../../hooks/use-input\";\nimport { useDispatch } from \"react-redux\";\nimport { invoiceActions } from \"../../store/index-redux\";\n\nfunction NewForm(props) {\n  const dispatch = useDispatch();\n\n  const randomId = Math.floor(100000 + Math.random() * 900000);\n\n  const [component, setComponent] = useState([\"sampleComponent\"]);\n\n  const [invoiceItemList, setInvoiceItemList] = useState([]);\n\n  //To Get the term value from select Input\n  const [termValue, setTermValue] = useState(\"1\");\n\n  const getTermValue = (e) => {\n    if (e.target.value) {\n      setTermValue(e.target.value);\n    }\n  };\n\n  //Adding, Removing and getting the Invoice items\n  const onAddItemHandler = (e) => {\n    e.preventDefault();\n\n    setComponent((prev) => [...prev, \"sampleComponent\"]);\n  };\n\n  const onDeleteHandler = (id) => {\n    setComponent((prev) => prev.filter((item, i) => i !== id));\n  };\n\n  const getItemValue = (value) => {\n    setInvoiceItemList((prev) => [...prev, value]);\n  };\n\n  //Input Validation\n  const errorText = <p className=\"errorText\">Input must not be empty</p>;\n\n  const {\n    value: addressInput,\n    isValid: enteredAddressIsValid,\n    isInvalid: addressInputIsInvalid,\n    onChangeHandler: addressChangeHandler,\n    onBlurHandler: addressBlurHandler,\n    reset: resetAddressInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: cityInput,\n    isValid: enteredCityIsValid,\n    isInvalid: cityInputIsInvalid,\n    onChangeHandler: cityChangeHandler,\n    onBlurHandler: cityBlurHandler,\n    reset: resetCityInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: postCodeInput,\n    isValid: enteredpostCodeIsValid,\n    isInvalid: postCodeInputIsInvalid,\n    onChangeHandler: postCodeChangeHandler,\n    onBlurHandler: postCodeBlurHandler,\n    reset: resetpostCodeInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: countryInput,\n    isValid: enteredcountryIsValid,\n    isInvalid: countryInputIsInvalid,\n    onChangeHandler: countryChangeHandler,\n    onBlurHandler: countryBlurHandler,\n    reset: resetcountryInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: clientNameInput,\n    isValid: enteredclientNameIsValid,\n    isInvalid: clientNameInputIsInvalid,\n    onChangeHandler: clientNameChangeHandler,\n    onBlurHandler: clientNameBlurHandler,\n    reset: resetclientNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: clientEmailInput,\n    isValid: enteredclientEmailIsValid,\n    isInvalid: clientEmailInputIsInvalid,\n    onChangeHandler: clientEmailChangeHandler,\n    onBlurHandler: clientEmailBlurHandler,\n    reset: resetclientEmailInput,\n  } = useInput((value) => value.includes(\"@\"));\n\n  const {\n    value: clientAddressInput,\n    isValid: enteredclientAddressIsValid,\n    isInvalid: clientAddressInputIsInvalid,\n    onChangeHandler: clientAddressChangeHandler,\n    onBlurHandler: clientAddressBlurHandler,\n    reset: resetclientAddressInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: clientCityInput,\n    isValid: enteredclientCityIsValid,\n    isInvalid: clientCityInputIsInvalid,\n    onChangeHandler: clientCityChangeHandler,\n    onBlurHandler: clientCityBlurHandler,\n    reset: resetclientCityInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: clientPostCodeInput,\n    isValid: enteredclientPostCodeIsValid,\n    isInvalid: clientPostCodeInputIsInvalid,\n    onChangeHandler: clientPostCodeChangeHandler,\n    onBlurHandler: clientPostCodeBlurHandler,\n    reset: resetclientPostCodeInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: clientCountryInput,\n    isValid: enteredclientCountryIsValid,\n    isInvalid: clientCountryInputIsInvalid,\n    onChangeHandler: clientCountryChangeHandler,\n    onBlurHandler: clientCountryBlurHandler,\n    reset: resetclientCountryInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: invoiceDateInput,\n    isValid: enteredinvoiceDateIsValid,\n    isInvalid: invoiceDateInputIsInvalid,\n    onChangeHandler: invoiceDateChangeHandler,\n    onBlurHandler: invoiceDateBlurHandler,\n    reset: resetinvoiceDateInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: descriptionInput,\n    isValid: entereddescriptionIsValid,\n    isInvalid: descriptionInputIsInvalid,\n    onChangeHandler: descriptionChangeHandler,\n    onBlurHandler: descriptionBlurHandler,\n    reset: resetdescriptionInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const resetForm = () => {\n    resetAddressInput();\n    resetCityInput();\n    resetpostCodeInput();\n    resetcountryInput();\n    resetclientCountryInput();\n    resetclientEmailInput();\n    resetclientNameInput();\n    resetclientAddressInput();\n    resetclientCityInput();\n    resetclientPostCodeInput();\n    resetclientCountryInput();\n    resetinvoiceDateInput();\n    setTermValue(\"\");\n    resetdescriptionInput();\n    setInvoiceItemList([]);\n\n    props.closeForm();\n  };\n\n  //On Save and Send Button Clicked\n  const onSaveAndSend = () => {\n    if (\n      !enteredAddressIsValid ||\n      !enteredCityIsValid ||\n      !enteredpostCodeIsValid ||\n      !enteredcountryIsValid ||\n      !enteredclientNameIsValid ||\n      !enteredclientEmailIsValid ||\n      !enteredclientAddressIsValid ||\n      !enteredclientCityIsValid ||\n      !enteredclientPostCodeIsValid ||\n      !enteredclientCountryIsValid ||\n      !enteredinvoiceDateIsValid ||\n      !entereddescriptionIsValid ||\n      termValue === \"\" ||\n      invoiceItemList.length <= 0\n    ) {\n      return;\n    }\n\n    const invoice = {\n      from: {\n        address: addressInput,\n        city: cityInput,\n        postCode: postCodeInput,\n        country: countryInput,\n      },\n      to: {\n        mail: clientEmailInput,\n        name: clientNameInput,\n        address: clientAddressInput,\n        city: clientCityInput,\n        postCode: clientPostCodeInput,\n        country: clientCountryInput,\n      },\n      invoiceDate: invoiceDateInput,\n      terms: termValue,\n      desc: descriptionInput,\n      itemList: invoiceItemList,\n      status: \"Pending\",\n      id: randomId.toString(),\n    };\n\n    dispatch(invoiceActions.addInvoice(invoice));\n\n    resetForm();\n  };\n\n  //On Save as draft Button Clicked\n  const onSaveAsDraft = () => {\n    if (\n      !enteredAddressIsValid ||\n      !enteredCityIsValid ||\n      !enteredpostCodeIsValid ||\n      !enteredcountryIsValid ||\n      !enteredclientNameIsValid ||\n      !enteredclientEmailIsValid ||\n      !enteredclientAddressIsValid ||\n      !enteredclientCityIsValid ||\n      !enteredclientPostCodeIsValid ||\n      !enteredclientCountryIsValid ||\n      !enteredinvoiceDateIsValid ||\n      !entereddescriptionIsValid ||\n      termValue === \"\" ||\n      invoiceItemList.length <= 0\n    ) {\n      return;\n    }\n\n    const invoice = {\n      from: {\n        address: addressInput,\n        city: cityInput,\n        postCode: postCodeInput,\n        country: countryInput,\n      },\n      to: {\n        mail: clientEmailInput,\n        name: clientNameInput,\n        address: clientAddressInput,\n        city: clientCityInput,\n        postCode: clientPostCodeInput,\n        country: clientCountryInput,\n      },\n      invoiceDate: invoiceDateInput,\n      terms: termValue,\n      desc: descriptionInput,\n      itemList: invoiceItemList,\n      status: \"Draft\",\n      id: randomId.toString(),\n    };\n\n    dispatch(invoiceActions.addInvoice(invoice));\n\n    resetForm();\n  };\n\n  //On Discard Button Clicked\n  const ondiscardHandler = (e) => {\n    e.preventDefault();\n\n    resetForm();\n  };\n\n  const backdropClasses = [\n    \"backdrop\",\n    props.show ? \"BackdropOpen\" : \"BackdropClosed\",\n  ];\n\n  const modalClasses = [\"formModal\", props.show ? \"ModalOpen\" : \"ModalClosed\"];\n\n  return (\n    <Fragment>\n      {props.show && (\n        <div\n          onClick={props.closeForm}\n          className={backdropClasses.join(\" \")}\n        ></div>\n      )}\n\n      {props.show && (\n        <div className={modalClasses.join(\" \")}>\n          <button onClick={props.closeForm} className=\"backBtn\">\n            <img src={\"/static/images/icon-arrow-left.svg\"} alt=\"\" />\n            Go Back\n          </button>\n\n          <h2>New Invoice</h2>\n\n          <div className=\"form\">\n            <p>Bill Form</p>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"address\">Street Address</label>\n              <input\n                value={addressInput}\n                type=\"text\"\n                id=\"address\"\n                onChange={addressChangeHandler}\n                onBlur={addressBlurHandler}\n              />\n              {addressInputIsInvalid && errorText}\n            </div>\n\n            <div className=\"formGrid\">\n              <div className=\"formInput\">\n                <label htmlFor=\"city\">City</label>\n                <input\n                  value={cityInput}\n                  type=\"text\"\n                  id=\"city\"\n                  onChange={cityChangeHandler}\n                  onBlur={cityBlurHandler}\n                />\n                {cityInputIsInvalid && errorText}\n              </div>\n\n              <div className=\"formInput\">\n                <label htmlFor=\"postCode\">Post Code</label>\n                <input\n                  value={postCodeInput}\n                  type=\"text\"\n                  id=\"postCode\"\n                  onChange={postCodeChangeHandler}\n                  onBlur={postCodeBlurHandler}\n                />\n                {postCodeInputIsInvalid && errorText}\n              </div>\n            </div>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"country\">Country</label>\n              <input\n                value={countryInput}\n                type=\"text\"\n                id=\"country\"\n                onChange={countryChangeHandler}\n                onBlur={countryBlurHandler}\n              />\n              {countryInputIsInvalid && errorText}\n            </div>\n\n            <p>Bill To</p>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"clientName\">Client's Name</label>\n              <input\n                value={clientNameInput}\n                type=\"text\"\n                id=\"clientName\"\n                onChange={clientNameChangeHandler}\n                onBlur={clientNameBlurHandler}\n              />\n              {clientNameInputIsInvalid && errorText}\n            </div>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"clientEmail\">Client's Email</label>\n              <input\n                value={clientEmailInput}\n                type=\"email\"\n                id=\"clientEmail\"\n                onChange={clientEmailChangeHandler}\n                onBlur={clientEmailBlurHandler}\n              />\n              {clientEmailInputIsInvalid && errorText}\n            </div>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"clientAddress\">Street Address</label>\n              <input\n                value={clientAddressInput}\n                type=\"text\"\n                id=\"clientAddress\"\n                onChange={clientAddressChangeHandler}\n                onBlur={clientAddressBlurHandler}\n              />\n              {clientAddressInputIsInvalid && errorText}\n            </div>\n\n            <div className=\"formGrid\">\n              <div className=\"formInput\">\n                <label htmlFor=\"clientCity\">City</label>\n                <input\n                  value={clientCityInput}\n                  type=\"text\"\n                  id=\"clientCity\"\n                  onChange={clientCityChangeHandler}\n                  onBlur={clientCityBlurHandler}\n                />\n                {clientCityInputIsInvalid && errorText}\n              </div>\n\n              <div className=\"formInput\">\n                <label htmlFor=\"clientPostCode\">Post Code</label>\n                <input\n                  value={clientPostCodeInput}\n                  type=\"text\"\n                  id=\"clientPostCode\"\n                  onChange={clientPostCodeChangeHandler}\n                  onBlur={clientPostCodeBlurHandler}\n                />\n                {clientPostCodeInputIsInvalid && errorText}\n              </div>\n            </div>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"clientCountry\">Country</label>\n              <input\n                value={clientCountryInput}\n                type=\"text\"\n                id=\"clientCountry\"\n                onChange={clientCountryChangeHandler}\n                onBlur={clientCountryBlurHandler}\n              />\n              {clientCountryInputIsInvalid && errorText}\n            </div>\n\n            <div className=\"formGrid\">\n              <div className=\"formInput\">\n                <label htmlFor=\"invoiceDate\">Invoice Date</label>\n                <input\n                  value={invoiceDateInput}\n                  type=\"date\"\n                  id=\"invoiceDate\"\n                  onChange={invoiceDateChangeHandler}\n                  onBlur={invoiceDateBlurHandler}\n                />\n                {invoiceDateInputIsInvalid && errorText}\n              </div>\n\n              <div className=\"formInput\">\n                <label htmlFor=\"paymentTerm\">Payment Term</label>\n                <select value={termValue} onChange={getTermValue}>\n                  <option value=\"1\">Net 1 day</option>\n                  <option value=\"7\">Net 7 days</option>\n                  <option value=\"30\">Net 30 days</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"description\">Project Description</label>\n              <input\n                value={descriptionInput}\n                type=\"text\"\n                id=\"description\"\n                onChange={descriptionChangeHandler}\n                onBlur={descriptionBlurHandler}\n              />\n              {descriptionInputIsInvalid && errorText}\n            </div>\n\n            <h2>Item List</h2>\n\n            <div className=\"itemList\">\n              {component.map((item, i) => (\n                <Item\n                  key={i}\n                  id={i}\n                  onDelete={onDeleteHandler}\n                  onItemValue={getItemValue}\n                />\n              ))}\n            </div>\n\n            <button onClick={onAddItemHandler} className=\"btnAdd\">\n              + Add New item\n            </button>\n\n            <div className=\"btnBox\">\n              <button onClick={ondiscardHandler} className=\"btnDiscard\">\n                Discard\n              </button>\n\n              <div>\n                <button onClick={onSaveAsDraft} className=\"btnDraft\">\n                  Save as draft\n                </button>\n                <button onClick={onSaveAndSend} className=\"btnSend\">\n                  Save & Send\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n}\n\nexport default NewForm;\n","import classes from \"./InvoicesPage.module.css\";\nimport Nav from \"../../components/Layout/Nav\";\nimport Layout from \"../../components/Layout/Layout\";\nimport InvoiceList from \"../../components/Invoices/InvoiceList\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport NewForm from \"../../components/Form/NewForm\";\n\nfunction InvoicesPage() {\n  const [filterValue, setFilterValue] = useState(\"\");\n\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const invoices = useSelector((state) => state.allInvoice.invoices);\n\n  const getFilterValueHandler = (value) => {\n    setFilterValue(value);\n  };\n\n  const filteredInvoices = invoices.filter((invoice) => {\n    if (filterValue === \"all\") {\n      return invoice;\n    } else {\n      return invoice.status.toLowerCase().includes(filterValue);\n    }\n  });\n\n  const openFormHandler = () => {\n    setModalOpen(true);\n  };\n\n  const closeFormHandler = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <div className={classes.home}>\n      <div className={classes.navBar}>\n        <Nav />\n      </div>\n\n      <div>\n        <Layout\n          openForm={openFormHandler}\n          getFilterValue={getFilterValueHandler}\n        >\n          <InvoiceList invoices={filteredInvoices} />\n        </Layout>\n      </div>\n\n      <NewForm closeForm={closeFormHandler} show={modalOpen} />\n    </div>\n  );\n}\n\nexport default InvoicesPage;\n","import \"./InvoiceDetail.css\";\nimport { getDueDate } from \"../../utils/utils\";\nimport { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { invoiceActions } from \"../../store/index-redux\";\nimport { useNavigate } from \"react-router\";\n\nfunction InvoiceDetail(props) {\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const invoice = props.invoice;\n\n  const dueDate = getDueDate(invoice.invoiceDate, invoice.terms);\n\n  const amount = invoice.itemList.map((item) => item.price * item.qty);\n\n  if (amount.length <= 0) return;\n\n  const totalAmount = amount.reduce((a, b) => a + b);\n\n  const onDeleteHandler = () => {\n    dispatch(invoiceActions.deleteInvoice(invoice.id));\n    navigate(\"/invoices\", { replace: true });\n  };\n\n  const onMarkAsPaidHandler = () => {\n    dispatch(invoiceActions.markInvoiceAsPaid(invoice.id));\n  };\n\n  let color;\n\n  if (invoice.status === \"Paid\") {\n    color = \"green\";\n  } else if (invoice.status === \"Pending\") {\n    color = \"orange\";\n  } else {\n    color = \"grey\";\n  }\n\n  const isPaid = invoice.status === \"Paid\";\n\n  return (\n    <div className=\"container allDetails\">\n      <button onClick={props.onGoBack} className=\"backBtn\">\n        <img src={\"/static/images/icon-arrow-left.svg\"} alt=\"\" />\n        Go Back\n      </button>\n\n      <div className=\"btnDiv\">\n        <div className=\"statusDiv\">\n          <p>Status</p>\n\n          <div className={`status ${color}`}>\n            <span className=\"dot\"></span>\n            <span className=\"statusName\">{invoice.status}</span>\n          </div>\n        </div>\n\n        <div className=\"statusFunctions btnTop\">\n          {!isPaid && (\n            <button onClick={props.openForm} className=\"editInvoiceBtn\">\n              Edit\n            </button>\n          )}\n          <button onClick={onDeleteHandler} className=\"deleteBtn\">\n            Delete\n          </button>\n          {!isPaid && (\n            <button onClick={onMarkAsPaidHandler} className=\"markBtn\">\n              Mark as paid\n            </button>\n          )}\n        </div>\n      </div>\n\n      <div className=\"details\">\n        <div className=\"clientInfo\">\n          <span>\n            <p>\n              <span>#</span>\n              {invoice.id}\n            </p>\n            <p>Landing Page Design</p>\n          </span>\n\n          <span className=\"clientShit\">\n            <p>{invoice.from.address}</p>\n            <p>{invoice.from.city}</p>\n            <p>{invoice.from.country}</p>\n            <p>{invoice.from.postCode}</p>\n          </span>\n        </div>\n\n        <div className=\"recieverInfo\">\n          <span>\n            <p>Invoice Date</p>\n            <p className=\"answer\">{invoice.invoiceDate}</p>\n          </span>\n          <span>\n            <p>Bill To</p>\n            <p className=\"answer\">{invoice.to.name}</p>\n          </span>\n          <span>\n            <p>Payment Due</p>\n            <p className=\"answer\">{dueDate}</p>\n          </span>\n          <span>\n            <p>{invoice.to.address}</p>\n            <p>{invoice.to.city}</p>\n            <p>{invoice.to.postCode}</p>\n            <p className=\"countryName\">{invoice.to.country}</p>\n          </span>\n          <span>\n            <p>Send To</p>\n            <p className=\"answer\">{invoice.to.mail}</p>\n          </span>\n        </div>\n      </div>\n\n      <div className=\"checkout\">\n        {invoice.itemList.map((item) => (\n          <Fragment key={item.id}>\n            <div>\n              <span>\n                <p>{item.itemName}</p>\n                <p className=\"checkoutAmount\">\n                  <span>{item.qty}</span>\n                  <span>X</span>£{item.price}\n                </p>\n              </span>\n              <p>£{item.price * item.qty}</p>\n            </div>\n          </Fragment>\n        ))}\n\n        <div className=\"grandTotal\">\n          <p>Grand Total</p>\n          <p className=\"total\">£{totalAmount}</p>\n        </div>\n      </div>\n\n      <div className=\"checkout_desktop\">\n        {invoice.itemList.map((item) => (\n          <div key={item.id} className=\"priceInfo\">\n            <span>\n              <p>Item Name</p>\n              <p>{item.itemName}</p>\n            </span>\n            <span>\n              <p>QTY.</p>\n              <p>{item.qty}</p>\n            </span>\n            <span>\n              <p>Price</p>\n              <p>£{item.price}</p>\n            </span>\n            <span>\n              <p>Total</p>\n              <p>£{item.price * item.qty}</p>\n            </span>\n          </div>\n        ))}\n\n        <div className=\"grandTotal\">\n          <p>Amount Due</p>\n          <p className=\"total\">£{totalAmount}</p>\n        </div>\n      </div>\n\n      <div className=\"split\">\n        <div></div>\n        <div className=\"statusFunctions btnBottom\">\n          <button onClick={props.openForm} className=\"editInvoiceBtn\">\n            Edit\n          </button>\n          <button onClick={onDeleteHandler} className=\"deleteBtn\">\n            Delete\n          </button>\n          {!isPaid && (\n            <button onClick={onMarkAsPaidHandler} className=\"markBtn\">\n              Mark as paid\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InvoiceDetail;\n","import { useRef, useState } from \"react\";\nimport \"./Item.css\";\n\nfunction EditItem(props) {\n  const [btnClicked, setBtnClicked] = useState(false);\n\n  const total = props.price * props.qty;\n\n  const nameInputRef = useRef();\n\n  const qtyInputRef = useRef();\n\n  const priceInputRef = useRef();\n\n  const onSubmitHandler = () => {\n    if (\n      nameInputRef.current.value === \"\" &&\n      qtyInputRef.current.value === \"\" &&\n      priceInputRef.current.value === \"\"\n    ) {\n      return;\n    }\n\n    setBtnClicked(true);\n\n    const invoiceItem = {\n      itemName: nameInputRef.current.value,\n      qty: qtyInputRef.current.value,\n      price: priceInputRef.current.value,\n      total: total,\n      id: props.id,\n    };\n\n    props.onItemValue(invoiceItem);\n  };\n\n  return (\n    <div className=\"item\">\n      <div className=\"formInput\">\n        <label htmlFor=\"itemName\">Item Name</label>\n        <input\n          defaultValue={props.itemName}\n          type=\"text\"\n          id=\"itemName\"\n          ref={nameInputRef}\n        />\n      </div>\n\n      <div className=\"itemGrid\">\n        <div className=\"formInput\">\n          <label htmlFor=\"qty\">Qty.</label>\n          <input\n            defaultValue={props.qty}\n            type=\"number\"\n            id=\"qty\"\n            ref={qtyInputRef}\n          />\n        </div>\n\n        <div className=\"formInput\">\n          <label htmlFor=\"price\">Price</label>\n          <input\n            defaultValue={props.price}\n            type=\"number\"\n            id=\"price\"\n            ref={priceInputRef}\n          />\n        </div>\n\n        <div className=\"total\">\n          <span>Total</span>\n          <p>{total}</p>\n        </div>\n\n        <button className=\"removeItem\">\n          <img src={\"/static/images/icon-delete.svg\"} alt=\"\" />\n        </button>\n\n        <button\n          className=\"btnAddToList\"\n          onClick={onSubmitHandler}\n          disabled={btnClicked}\n        >\n          {!btnClicked && <img src=\"/static/images/icon-plus.svg\" alt=\"\" />}\n          {btnClicked && <img src=\"/static/images/icon-check.svg\" alt=\"\" />}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default EditItem;\n","import \"./NewForm.css\";\nimport Item from \"./Item\";\nimport { useDispatch } from \"react-redux\";\nimport { invoiceActions } from \"../../store/index-redux\";\nimport EditItem from \"./EditItem\";\nimport { useState, Fragment } from \"react\";\nimport { formatEditDate } from \"../../utils/utils\";\n\nfunction EditForm(props) {\n  const dispatch = useDispatch();\n\n  const invoice = props.invoice;\n\n  //This is all the invoice item Function\n  const [invoiceItemList, setInvoiceItemList] = useState([]);\n\n  const [component, setComponent] = useState([\"sampleComponent\"]);\n\n  const onAddItemHandler = (e) => {\n    e.preventDefault();\n\n    setComponent((prev) => [...prev, \"sampleComponent\"]);\n  };\n\n  const onDeleteHandler = (id) => {\n    setComponent((prev) => prev.filter((item, i) => i !== id));\n  };\n\n  const getItemValue = (value) => {\n    setInvoiceItemList((prev) => [...prev, value]);\n  };\n\n  const getEditItemValue = (value) => {\n    setInvoiceItemList((prev) => [...prev, value]);\n  };\n\n  //This formats the date input\n  const date = formatEditDate(invoice.invoiceDate);\n\n  //The input Ref\n  const [addressInput, setAddressInput] = useState(invoice.from.address);\n\n  const onChangeAddressValue = (e) => {\n    setAddressInput(e.target.value);\n  };\n\n  const [cityInput, setCityInput] = useState(invoice.from.city);\n\n  const onChangeCityValue = (e) => {\n    setCityInput(e.target.value);\n  };\n\n  const [postcodeInput, setPostcodeInput] = useState(invoice.from.postCode);\n\n  const onChangePostCodeValue = (e) => {\n    setPostcodeInput(e.target.value);\n  };\n\n  const [countryInput, setCountryInput] = useState(invoice.from.country);\n\n  const onChangeCountryValue = (e) => {\n    setCountryInput(e.target.value);\n  };\n\n  const [clientNameInput, setClientNameInput] = useState(invoice.to.name);\n\n  const onChangeclientNameValue = (e) => {\n    setClientNameInput(e.target.value);\n  };\n\n  const [clientMailInput, setClientMailInput] = useState(invoice.to.mail);\n\n  const onChangeclientMailValue = (e) => {\n    setClientMailInput(e.target.value);\n  };\n\n  const [clientAddressInput, setClientAddressInput] = useState(\n    invoice.to.address\n  );\n\n  const onChangeclientAddressValue = (e) => {\n    setClientAddressInput(e.target.value);\n  };\n\n  const [clientCityInput, setClientCityInput] = useState(invoice.to.city);\n\n  const onChangeclientCityValue = (e) => {\n    setClientCityInput(e.target.value);\n  };\n\n  const [clientPostCodeInput, setClientPostCodeInput] = useState(\n    invoice.to.postCode\n  );\n\n  const onChangeclientPostCodeValue = (e) => {\n    setClientPostCodeInput(e.target.value);\n  };\n\n  const [clientCountryInput, setClientCountryInput] = useState(\n    invoice.to.country\n  );\n\n  const onChangeclientCountryValue = (e) => {\n    setClientCountryInput(e.target.value);\n  };\n\n  const [invoiceDateInput, setInvoiceDateInput] = useState(date);\n\n  const onChangeInvoiceDateValue = (e) => {\n    setInvoiceDateInput(e.target.value);\n  };\n\n  const [termValue, setTermValue] = useState(invoice.terms);\n\n  const getTermValue = (e) => {\n    if (e.target.value) {\n      setTermValue(e.target.value);\n    }\n  };\n\n  const [descriptionInput, setDescriptionInput] = useState(invoice.desc);\n\n  const onChangeDescriptionValue = (e) => {\n    setDescriptionInput(e.target.value);\n  };\n\n  const onSubmitHandler = () => {\n    if (\n      addressInput === \"\" &&\n      cityInput === \"\" &&\n      postcodeInput === \"\" &&\n      countryInput === \"\" &&\n      clientNameInput === \"\" &&\n      clientMailInput === \"\" &&\n      clientAddressInput === \"\" &&\n      clientCityInput === \"\" &&\n      clientPostCodeInput === \"\" &&\n      clientCountryInput === \"\" &&\n      invoiceDateInput === \"\" &&\n      descriptionInput === \"\" &&\n      termValue === \"\" &&\n      invoiceItemList.length <= 0\n    ) {\n      return;\n    }\n\n    const updatedInvoice = {\n      from: {\n        address: addressInput,\n        city: cityInput,\n        postCode: postcodeInput,\n        country: countryInput,\n      },\n      to: {\n        mail: clientMailInput,\n        name: clientNameInput,\n        address: clientAddressInput,\n        city: clientCityInput,\n        postCode: clientPostCodeInput,\n        country: clientCountryInput,\n      },\n      invoiceDate: invoiceDateInput,\n      terms: termValue,\n      desc: descriptionInput,\n      itemList: invoiceItemList,\n      status: invoice.status,\n      id: invoice.id,\n    };\n\n    dispatch(invoiceActions.updateInvoice(updatedInvoice));\n\n    props.closeForm();\n  };\n\n  const backdropClasses = [\n    \"backdrop\",\n    props.show ? \"BackdropOpen\" : \"BackdropClosed\",\n  ];\n\n  const modalClasses = [\"formModal\", props.show ? \"ModalOpen\" : \"ModalClosed\"];\n\n  return (\n    <Fragment>\n      {props.show && (\n        <div\n          onClick={props.closeForm}\n          className={backdropClasses.join(\" \")}\n        ></div>\n      )}\n\n      {props.show && (\n        <div className={modalClasses.join(\" \")}>\n          <button onClick={props.closeForm} className=\"backBtn\">\n            <img src={\"/static/images/icon-arrow-left.svg\"} alt=\"\" />\n            Go Back\n          </button>\n\n          <h2>Edit #{invoice.id}</h2>\n\n          <div className=\"form\">\n            <p>Bill Form</p>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"address\">Street Address</label>\n              <input\n                defaultValue={addressInput}\n                type=\"text\"\n                id=\"address\"\n                onChange={onChangeAddressValue}\n              />\n            </div>\n\n            <div className=\"formGrid\">\n              <div className=\"formInput\">\n                <label htmlFor=\"city\">City</label>\n                <input\n                  defaultValue={cityInput}\n                  type=\"text\"\n                  id=\"city\"\n                  onChange={onChangeCityValue}\n                />\n              </div>\n\n              <div className=\"formInput\">\n                <label htmlFor=\"postCode\">Post Code</label>\n                <input\n                  defaultValue={postcodeInput}\n                  type=\"text\"\n                  id=\"postCode\"\n                  onChange={onChangePostCodeValue}\n                />\n              </div>\n            </div>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"country\">Country</label>\n              <input\n                defaultValue={countryInput}\n                type=\"text\"\n                id=\"country\"\n                onChange={onChangeCountryValue}\n              />\n            </div>\n\n            <p>Bill To</p>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"clientName\">Client's Name</label>\n              <input\n                defaultValue={clientNameInput}\n                type=\"text\"\n                id=\"clientName\"\n                onChange={onChangeclientNameValue}\n              />\n            </div>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"clientEmail\">Client's Email</label>\n              <input\n                defaultValue={clientMailInput}\n                type=\"email\"\n                id=\"clientEmail\"\n                onChange={onChangeclientMailValue}\n              />\n            </div>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"clientAddress\">Street Address</label>\n              <input\n                defaultValue={clientAddressInput}\n                type=\"text\"\n                id=\"clientAddress\"\n                onChange={onChangeclientAddressValue}\n              />\n            </div>\n\n            <div className=\"formGrid\">\n              <div className=\"formInput\">\n                <label htmlFor=\"clientCity\">City</label>\n                <input\n                  defaultValue={clientCityInput}\n                  type=\"text\"\n                  id=\"clientCity\"\n                  onChange={onChangeclientCityValue}\n                />\n              </div>\n\n              <div className=\"formInput\">\n                <label htmlFor=\"clientPostCode\">Post Code</label>\n                <input\n                  defaultValue={clientPostCodeInput}\n                  type=\"text\"\n                  id=\"clientPostCode\"\n                  onChange={onChangeclientPostCodeValue}\n                />\n              </div>\n            </div>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"clientCountry\">Country</label>\n              <input\n                defaultValue={clientCountryInput}\n                type=\"text\"\n                id=\"clientCountry\"\n                onChange={onChangeclientCountryValue}\n              />\n            </div>\n\n            <div className=\"formGrid\">\n              <div className=\"formInput\">\n                <label htmlFor=\"invoiceDate\">Invoice Date</label>\n                <input\n                  type=\"date\"\n                  id=\"invoiceDate\"\n                  defaultValue={invoiceDateInput}\n                  onChange={onChangeInvoiceDateValue}\n                />\n              </div>\n\n              <div className=\"formInput\">\n                <label htmlFor=\"paymentTerm\">Payment Term</label>\n                <select onClick={getTermValue} defaultValue={termValue}>\n                  <option value=\"1\">Net 1 day</option>\n                  <option value=\"7\">Net 7 days</option>\n                  <option value=\"30\">Net 30 days</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"formInput\">\n              <label htmlFor=\"description\">Project Description</label>\n              <input\n                defaultValue={descriptionInput}\n                type=\"text\"\n                id=\"description\"\n                onChange={onChangeDescriptionValue}\n              />\n            </div>\n\n            <h2>Item List</h2>\n\n            <div className=\"itemList\">\n              {invoice.itemList.map((item, i) => (\n                <EditItem\n                  key={i}\n                  itemName={item.itemName}\n                  qty={item.qty}\n                  price={item.price}\n                  onItemValue={getEditItemValue}\n                />\n              ))}\n\n              {component.map((item, i) => (\n                <Item\n                  key={i}\n                  id={i}\n                  onDelete={onDeleteHandler}\n                  onItemValue={getItemValue}\n                />\n              ))}\n            </div>\n\n            <button onClick={onAddItemHandler} className=\"btnAdd\">\n              + Add New item\n            </button>\n\n            <div className=\"btnBox\">\n              <div></div>\n\n              <div>\n                <button onClick={props.closeForm} className=\"btnCancel\">\n                  Cancel\n                </button>\n                <button\n                  disabled={invoiceItemList.length <= 0}\n                  onClick={onSubmitHandler}\n                  className=\"btnSaveChanges\"\n                >\n                  Save Changes\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n}\n\nexport default EditForm;\n","import InvoiceDetail from \"../../components/InvoiceDetail/InvoiceDetail\";\nimport Nav from \"../../components/Layout/Nav\";\nimport classes from \"./Invoice.module.css\";\nimport { useNavigate } from \"react-router\";\nimport EditForm from \"../../components/Form/EditForm\";\nimport { Fragment, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useSelector } from \"react-redux\";\n\nfunction InvoicePage() {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const navigate = useNavigate();\n\n  const { invoiceId } = useParams();\n\n  const invoices = useSelector((state) => state.allInvoice.invoices);\n\n  const invoiceData = invoices?.filter((invoice) => invoice.id === invoiceId);\n\n  const invoice = invoiceData[0];\n\n  const onGoBackHandler = () => {\n    navigate(\"/invoices\", { replace: true });\n  };\n\n  const openFormHandler = () => {\n    setModalOpen(true);\n  };\n\n  const closeFormHandler = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <Fragment>\n      {invoice && (\n        <div className={classes.invoice}>\n          <div className={classes.navBar}>\n            <Nav />\n          </div>\n\n          <InvoiceDetail\n            invoice={invoice}\n            onGoBack={onGoBackHandler}\n            openForm={openFormHandler}\n          />\n\n          <EditForm\n            invoice={invoice}\n            closeForm={closeFormHandler}\n            show={modalOpen}\n          />\n        </div>\n      )}\n    </Fragment>\n  );\n}\n\nexport default InvoicePage;\n","import React, { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useAuth } from \"../../store/auth-context\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./Auth.module.css\";\n\nexport default function SignUp() {\n  const emailRef = useRef();\n\n  const passwordRef = useRef();\n\n  const passwordConfirmRef = useRef();\n\n  const authCtx = useAuth();\n\n  const [error, setError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const onHandleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n\n    try {\n      setError(\"\");\n\n      setLoading(true);\n\n      await authCtx.signUp(emailRef.current.value, passwordRef.current.value);\n\n      navigate(\"/invoices\", { replace: true });\n    } catch (error) {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className={classes.formModal}>\n      <h1>SignUp</h1>\n\n      {error && <p className={classes.error}>{error}</p>}\n\n      <form onSubmit={onHandleSubmit} className={classes.form}>\n        <div className={classes.formInput}>\n          <label htmlFor=\"email\">Email</label>\n          <input required ref={emailRef} type=\"email\" id=\"email\" />\n        </div>\n\n        <div className={classes.formInput}>\n          <label htmlFor=\"password\">Password</label>\n          <input required ref={passwordRef} type=\"password\" id=\"password\" />\n        </div>\n\n        <div className={classes.formInput}>\n          <label htmlFor=\"password-confirm\">Re-enter Password</label>\n          <input\n            required\n            ref={passwordConfirmRef}\n            type=\"password\"\n            id=\"password-confirm\"\n          />\n        </div>\n\n        <div className={classes.actions}>\n          <button\n            disabled={loading}\n            type=\"submit\"\n            className={classes.btnAction}\n          >\n            Sign Up\n          </button>\n        </div>\n      </form>\n\n      <div className={classes.link}>\n        Already have an account? <Link to=\"/login\">Login</Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { useAuth } from \"../../store/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./Auth.module.css\";\n\nexport default function Login() {\n  const emailRef = useRef();\n\n  const passwordRef = useRef();\n\n  const authCtx = useAuth();\n\n  const navigate = useNavigate();\n\n  const [error, setError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n\n      setLoading(true);\n\n      await authCtx.login(emailRef.current.value, passwordRef.current.value);\n\n      navigate(\"/invoices\", { replace: true });\n    } catch (err) {\n      setError(\"Failed to log in\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className={classes.formModal}>\n      <h1>Login</h1>\n\n      {error && <p className={classes.error}>{error}</p>}\n\n      <form onSubmit={handleSubmit} className={classes.form}>\n        <div className={classes.formInput}>\n          <label htmlFor=\"email\">Email</label>\n          <input required ref={emailRef} type=\"email\" id=\"email\" />\n        </div>\n\n        <div className={classes.formInput}>\n          <label htmlFor=\"password\">Password</label>\n          <input required ref={passwordRef} type=\"password\" id=\"password\" />\n        </div>\n\n        <div className={classes.actions}>\n          <button\n            disabled={loading}\n            type=\"submit\"\n            className={classes.btnAction}\n          >\n            Login\n          </button>\n\n          <div className=\"\">\n            <Link to=\"/forgot-password\">Forgot Password?</Link>\n          </div>\n        </div>\n      </form>\n\n      <div className={classes.link}>\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport { useAuth } from \"../../store/auth-context\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./Auth.module.css\";\n\nexport default function ForgotPassword() {\n  const authCtx = useAuth();\n\n  const [error, setError] = useState(\"\");\n\n  const [message, setMessage] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const emailRef = useRef();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n\n      setError(\"\");\n\n      await authCtx.resetPassword(emailRef.current.value);\n\n      setMessage(\"Check your inbox for further instructions\");\n    } catch (err) {\n      setError(\"Failed to reset password\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className={classes.formModal}>\n      <h1>Password Reset</h1>\n\n      {error && <p className={classes.error}>{error}</p>}\n\n      {message && <p className={classes.message}>{message}</p>}\n\n      <form onSubmit={handleSubmit} className={classes.form}>\n        <div className={classes.formInput}>\n          <label htmlFor=\"email\">Email</label>\n          <input required ref={emailRef} type=\"email\" id=\"email\" />\n        </div>\n\n        <div className={classes.actions}>\n          <button\n            disabled={loading}\n            type=\"submit\"\n            className={classes.btnAction}\n          >\n            Reset\n          </button>\n\n          <div>\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </div>\n      </form>\n\n      <div className={classes.link}>\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Navigate } from \"react-router\";\n\nimport { useAuth } from \"../../store/auth-context\";\n\nexport default function PrivateRoutes({ children }) {\n  const authCtx = useAuth();\n\n  return authCtx.currentUser ? children : <Navigate to=\"/login\" />;\n}\n","import { invoiceActions } from \"./index-redux\";\n\nexport const fetchInvoiceData = (page) => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const res = await fetch(page);\n\n      if (!res.ok) throw new Error(\"Something went wrong...\");\n\n      const data = await res.json();\n\n      console.log(data);\n\n      const result = [];\n\n      for (const key in data) {\n        result.push(data[key].invoices);\n      }\n\n      const invoices = result[0].map((invoice) => invoice);\n\n      console.log(invoices);\n\n      return invoices;\n    };\n\n    try {\n      const invoiceData = await fetchData();\n\n      dispatch(\n        invoiceActions.replaceInvoices({\n          invoices: invoiceData || [],\n          totalInvoices: invoiceData.length,\n        })\n      );\n    } catch (err) {\n      console.log(\"Could not get invoice\");\n      console.error(err);\n    }\n  };\n};\n\nexport const sendInvoiceData = (invoices, page) => {\n  return async () => {\n    const sendRequest = async () => {\n      const res = await fetch(page, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          invoices: invoices,\n          totalInvoices: invoices.length,\n        }),\n      });\n\n      if (!res.ok) {\n        throw new Error(\"Something went wrong...\");\n      }\n    };\n\n    try {\n      await sendRequest();\n    } catch (err) {\n      console.log(\"Could not send invoice\");\n      console.log(err);\n    }\n  };\n};\n","import HomePage from \"./pages/HomePage/HomePage\";\nimport InvoicesPage from \"./pages/Invoices/InvoicesPage\";\nimport InvoicePage from \"./pages/invoice/InvoicePage\";\nimport SignUp from \"./components/Auth/SignUp\";\nimport Login from \"./components/Auth/Login\";\nimport ForgotPassword from \"./components/Auth/ForgotPassword\";\nimport { Routes, Route } from \"react-router\";\nimport PrivateRoutes from \"./components/Auth/PrivateRoutes\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchInvoiceData, sendInvoiceData } from \"./store/invoice-actions\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"./store/auth-context\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const invoices = useSelector((state) => state.allInvoice);\n\n  const authCtx = useAuth();\n\n  useEffect(() => {\n    dispatch(\n      fetchInvoiceData(\n        `https://invoices-49204-default-rtdb.firebaseio.com/${authCtx.storageId}.json`\n      )\n    );\n  }, [dispatch, authCtx.storageId]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (invoices.changed) {\n      dispatch(\n        sendInvoiceData(\n          invoices,\n          `https://invoices-49204-default-rtdb.firebaseio.com/${authCtx.storageId}.json`\n        )\n      );\n    }\n  }, [dispatch, invoices, authCtx.storageId]);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n\n      <Route\n        path=\"/invoices\"\n        element={\n          <PrivateRoutes>\n            <InvoicesPage />\n          </PrivateRoutes>\n        }\n      />\n\n      <Route\n        path=\"/invoices/:invoiceId\"\n        element={\n          <PrivateRoutes>\n            <InvoicePage />\n          </PrivateRoutes>\n        }\n      />\n\n      <Route path=\"/login\" element={<Login />} />\n\n      <Route path=\"/signup\" element={<SignUp />} />\n\n      <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index-redux\";\nimport { AuthContextprovider } from \"./store/auth-context\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <AuthContextprovider>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </AuthContextprovider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}